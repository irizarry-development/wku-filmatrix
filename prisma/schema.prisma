datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())

  // Auth
  email         String?   @unique
  saltedPassword String

  // User Profile
  name          String?
  outgoingEmail String?
  emailVerified DateTime?
  image         String?
  hasOnboarded  Boolean   @default(false)
  phoneNumber  String?
  address      String?
  position    String?
  credit      String?
  allergies   String?
  medications String?
  conditions  String?

  // Emergency Contact
  emergencyContactName String?
  emergencyContactPhone String?
  emergencyContactAddress String?

  // Relations

  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}